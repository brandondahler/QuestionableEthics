trigger: 
- master

pr: 
- '*'

pool:
  vmImage: 'windows-latest'

variables:
  solution: src/QEthics.sln
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: DownloadSecureFile@1
  inputs:
    secureFile: Assembly-CSharp.dll

- task: DownloadSecureFile@1
  inputs:
    secureFile: UnityEngine.dll


- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: CopyFiles@2
  inputs:
    SourceFolder: $(Agent.TempDirectory)
    Contents: |
      Assembly-CSharp.dll
      UnityEngine.dll
    TargetFolder: $(Build.SourcesDirectory)/src/QEthics/_ReferenceAssemblies

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DeleteFiles@1
  condition: always()
  inputs:
    SourceFolder: $(Build.SourcesDirectory)/src/QEthics/_ReferenceAssemblies
    Contents: |
      Assembly-CSharp.dll
      UnityEngine.dll

- task: CopyFiles@2
  inputs:
    SourceFolder: $(Build.SourcesDirectory)/src/QEthics/Data
    Contents: '**'
    TargetFolder: $(Build.ArtifactStagingDirectory)
    OverWrite: true

- task: CopyFiles@2
  inputs:
    SourceFolder: $(Build.SourcesDirectory)/src/QEthics/bin/$(buildConfiguration)
    Contents: |
      0Harmony.dll
      QEthics.dll
      QEthics.pdb
    TargetFolder: $(Build.ArtifactStagingDirectory)/Assemblies
    OverWrite: true
    
# Extract version from assembly
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $qEthics = [System.Reflection.Assembly]::ReflectionOnlyLoadFrom($($env:BUILD_ARTIFACTSTAGINGDIRECTORY + "\Assemblies\QEthics.dll"))
      $qEthicsName = $qEthics.GetName()
      $qEthicsVersion = $qEthicsName.version
      
      $formattedVersion = "{0}.{1}.{2}" -f $qEthicsVersion.Major,$qEthicsVersion.Minor,$qEthicsVersion.Build
      Write-Output "##vso[task.setvariable variable=ExtractedAssemblyVersion]$formattedVersion"

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'QuestionableEthics'
    publishLocation: 'Container'

- task: UniversalPackages@0
  inputs:
    command: 'publish'
    feedsToUse: 'internal'
    publishDirectory: '$(Build.ArtifactStagingDirectory)'
    feedsToUsePublish: 'internal'
    vstsFeedPublish: 'Default'
    vstsFeedPackagePublish: 'QuestionableEthics'
    versionOption: 'custom'
    versionPublish: '$(ExtractedAssemblyVersion)-ci.$(Build.BuildNumber)+$(Build.SourceVersion)'